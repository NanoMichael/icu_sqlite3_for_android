#!/bin/bash

# Host build for SQLite3

usage() {
    cat <<EOF

Compile SQLite3 command-line interface that support extension loading, full-text searches
and multi-language words segmentation.

Options: -h, --help  Print this message and exit
         -c, --clean Clear all build files

Usage:
    First make sure you have icu4c (version 58.2.0) installed, currently only support linux*
    and darwin* like OS. Alternativly, you can cross-build you own icu4c libs, see:

        https://github.com/NanoMichael/cross_compile_icu4c_for_android

    Run the following commands to build:

        chmod +x build
        ./build

    In directory ./out contains the executable file 'sqlite3' and the optional dynamic
    loadable libraries.

EOF

    exit 0
}

# Clean all build files
clean() {
    if [ ! -d ./out ]; then
        echo "No build files, exit."
        exit 0
    fi
    while true; do
        read -p "Do you wish to clean all build files (Y/N)? " yn
        case $yn in
        [Yy]*)
            rm -r ./out
            break;;
        [Nn]*)
            break;;
        *) ;;
        esac
    done
    exit 0
}


case "$1" in
'-h'|'--help' )
    usage
    ;;
'-c'|'--clean' )
    clean
    ;;
esac


HOST=$(pwd)
OUT=$HOST/out

cd ..
SQLITE3_SRC=$(pwd)/sqlite3/src/main/jni/sqlite/sqlite3.c
SQLITE3_INCLUDE=$(pwd)/sqlite3/src/main/jni/sqlite/
cd $HOST

if [ ! -d $OUT ]; then
    mkdir $OUT
fi

gcc -Os -v \
    -I$SQLITE3_INCLUDE \
    -DSQLITE_THREADSAFE=0 \
    -DSQLITE_ENABLE_FTS3 \
    -DSQLITE_ENABLE_FTS4 \
    -DSQLITE_ENABLE_FTS5 \
    -DSQLITE_ENABLE_JSON1 \
    -DSQLITE_ENABLE_RTREE \
    -DSQLITE_ENABLE_EXPLAIN_COMMNETS \
    -DSQLITE_ENABLE_ICU \
    -DHAVE_READLINE \
    -DSQLITE_ENABLE_LOAD_EXTENSION=1 \
    $HOST/shell.c $SQLITE3_SRC \
    -licui18n -licuio -licutu -licuuc -licudata \
    -ldl -lreadline -lncurses -lm -lstdc++ \
    -o $OUT/sqlite3

# Build for extensions

cd ../builtin_extensions
EXTENSIONS_SRC_DIR=$(pwd)/jni
cd $HOST

suffix=so
case $OSTYPE in
darwin*)
    suffix=dylib
    ;;
linux*)
    suffix=so
    ;;
*)
    echo "${OSTYPE} is not supported, currently only support darwin* and linux*, exit."
    exit 1
    ;;
esac

# Build for offsets_rank
gcc -v -shared -fpic \
    -I$SQLITE3_INCLUDE \
    -I$EXTENSIONS_SRC_DIR \
    $EXTENSIONS_SRC_DIR/offsets_rank.c \
    -o $OUT/offsets_rank.$suffix

# Build for okapi_bm25
gcc -v -shared -fpic \
    -I$SQLITE3_INCLUDE \
    -I$EXTENSIONS_SRC_DIR \
    $EXTENSIONS_SRC_DIR/okapi_bm25.c \
    -o $OUT/okapi_bm25.$suffix

# Build for spellfix
gcc -v -shared -fpic \
    -I$SQLITE3_INCLUDE \
    -I$EXTENSIONS_SRC_DIR \
    $EXTENSIONS_SRC_DIR/spellfix1.c \
    -o $OUT/spellfix.$suffix
